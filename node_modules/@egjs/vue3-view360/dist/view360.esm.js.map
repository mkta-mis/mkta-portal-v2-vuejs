{"version":3,"file":"view360.esm.js","sources":["../src/PanoViewer.ts","../src/SpinViewer.ts","../src/index.ts"],"sourcesContent":["/**\n * Copyright (c) 2015 NAVER Corp.\n * egjs projects are licensed under the MIT license\n */\nimport { defineComponent, PropType, h } from \"vue\";\nimport {\n  PanoViewer as VanillaPanoViewer,\n  PanoViewerOptions,\n  PANOVIEWER_OPTIONS,\n  PANOVIEWER_EVENTS,\n  withPanoViewerMethods,\n  updatePanoViewer,\n  getValidProps,\n  generateCanvasKey,\n  DEFAULT_CANVAS_CLASS\n} from \"@egjs/view360\";\nimport Component from \"@egjs/component\";\n\nimport { PanoViewerProps } from \"./types\";\n\ntype PropTypes = {\n  [key in keyof PanoViewerOptions]: {\n    type: PropType<PanoViewerOptions[key]>;\n  }\n};\n\nconst panoOptions = Object.keys(PANOVIEWER_OPTIONS).reduce((propObj, optionName) => {\n  propObj[optionName] = null;\n  return propObj;\n}, {} as {[key: string]: any}) as PropTypes;\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nconst PanoViewer = defineComponent({\n  props: {\n    ...panoOptions,\n    tag: {\n      type: String,\n      required: false,\n      default: \"div\"\n    }\n  },\n  data() {\n    return {\n      canvasKey: -1\n    } as {\n      canvasKey: number;\n      prevProps: PanoViewerProps;\n      vanillaPanoViewer: VanillaPanoViewer;\n      updateEmitter: Component<{ updated: void }>;\n    };\n  },\n  mounted() {\n    const props = getValidProps(this.$props) as PanoViewerProps;\n\n    this.updateEmitter = new Component();\n    this.vanillaPanoViewer = new VanillaPanoViewer(\n      this.$refs.container as HTMLElement,\n      props\n    );\n\n    withPanoViewerMethods(this, \"vanillaPanoViewer\");\n    this.prevProps = props;\n\n    const panoViewer = this.vanillaPanoViewer;\n    const events = (Object.keys(PANOVIEWER_EVENTS) as Array<keyof typeof PANOVIEWER_EVENTS>)\n      .map(key => PANOVIEWER_EVENTS[key]);\n\n    events.forEach(eventName => {\n      panoViewer.on(eventName, (e: any) => {\n        e.currentTarget = this;\n\n        // Make events from camelCase to kebab-case\n        this.$emit(eventName.replace(/([A-Z])/g, \"-$1\").toLowerCase(), e);\n      });\n    });\n  },\n  beforeDestroy() {\n    const panoViewer = this.vanillaPanoViewer;\n\n    panoViewer?.destroy();\n  },\n  updated() {\n    this.updateEmitter.trigger(\"updated\");\n  },\n  watch: {\n    $props: {\n      handler() {\n        const panoViewer = this.vanillaPanoViewer as VanillaPanoViewer;\n        if (!panoViewer) return;\n\n        const nextProps = getValidProps(this.$props) as PanoViewerProps;\n        const prevProps = this.prevProps;\n\n        if ((nextProps.image != null && nextProps.image !== prevProps.image)\n          || (nextProps.video != null && nextProps.video !== prevProps.video)) {\n          this.canvasKey = generateCanvasKey(this.canvasKey);\n          this.$forceUpdate();\n\n          // Update after render\n          this.updateEmitter.once(\"updated\", () => {\n            updatePanoViewer(panoViewer, nextProps, prevProps);\n          });\n        } else {\n          // Update immediately\n          updatePanoViewer(panoViewer, nextProps, prevProps);\n        }\n\n        this.prevProps = nextProps;\n      },\n      deep: true,\n      immediate: true\n    }\n  },\n  render() {\n    const canvasClass = this.canvasClass ?? DEFAULT_CANVAS_CLASS;\n\n    return h(this.tag, { ref: \"container\" },\n      [\n        h(\"canvas\", { class: canvasClass, key: this.canvasKey }),\n        this.$slots.default?.()\n      ]\n    );\n  }\n});\n\nexport default PanoViewer;\n","/* eslint-disable @typescript-eslint/ban-types */\nimport { defineComponent, PropType, h } from \"vue\";\nimport {\n  SpinViewer as VanillaSpinViewer,\n  SpinViewerOptions,\n  SPINVIEWER_EVENTS,\n  SPINVIEWER_OPTIONS,\n  withSpinViewerMethods,\n  getValidProps,\n  DEFAULT_WRAPPER_CLASS,\n  DEFAULT_IMAGE_CLASS\n} from \"@egjs/view360\";\n\ntype PropTypes = {\n  [key in keyof SpinViewerOptions]: {\n    type: PropType<SpinViewerOptions[key]>;\n  }\n};\n\nconst spinOptions = Object.keys(SPINVIEWER_OPTIONS).reduce((propObj, optionName) => {\n  propObj[optionName] = null;\n  return propObj;\n}, {} as {[key: string]: any}) as PropTypes;\n\nexport default defineComponent({\n  props: {\n    ...spinOptions,\n    tag: {\n      type: String,\n      required: false,\n      default: \"div\"\n    }\n  },\n  data() {\n    return {} as {\n      vanillaSpinViewer: VanillaSpinViewer;\n    };\n  },\n  mounted() {\n    const props = getValidProps(this.$props);\n    this.vanillaSpinViewer = new VanillaSpinViewer(\n      this.$refs.container as HTMLElement,\n      props\n    );\n\n    withSpinViewerMethods(this, \"vanillaSpinViewer\");\n\n    const spinViewer = this.vanillaSpinViewer;\n    const events = Object.keys(SPINVIEWER_EVENTS).map(key => SPINVIEWER_EVENTS[key]);\n\n    events.forEach(eventName => {\n      spinViewer.on(eventName, (e: any) => {\n        e.currentTarget = this;\n\n        // Make events from camelCase to kebab-case\n        this.$emit(eventName.replace(/([A-Z])/g, \"-$1\").toLowerCase(), e);\n      });\n    });\n  },\n  watch: {\n    scale(newVal) {\n      this.vanillaSpinViewer?.setScale(newVal);\n    }\n  },\n  render() {\n    const wrapperClass = this.wrapperClass ?? DEFAULT_WRAPPER_CLASS;\n    const imageClass = this.imageClass ?? DEFAULT_IMAGE_CLASS;\n\n    return h(this.tag, { ref: \"container\" }, [\n      h(\"div\", { class: wrapperClass }, [\n        h(\"img\", { class: imageClass })\n      ]),\n      this.$slots.default?.()\n    ]);\n  }\n});\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport { App } from \"vue\";\n\nimport PanoViewer from \"./PanoViewer\";\nimport SpinViewer from \"./SpinViewer\";\n\nexport * from \"@egjs/view360\";\n\nexport default {\n  install: (app: App) => {\n    app.component(\"PanoViewer\", PanoViewer);\n    app.component(\"SpinViewer\", SpinViewer);\n  },\n  PanoViewer,\n  SpinViewer\n};\nexport {\n  PanoViewer,\n  SpinViewer\n};\n"],"names":["panoOptions","Object","keys","PANOVIEWER_OPTIONS","reduce","propObj","optionName","PanoViewer","defineComponent","props","tag","type","String","required","default","data","canvasKey","mounted","getValidProps","$props","updateEmitter","Component","vanillaPanoViewer","VanillaPanoViewer","$refs","container","withPanoViewerMethods","prevProps","panoViewer","events","PANOVIEWER_EVENTS","map","key","forEach","eventName","on","e","currentTarget","_this","$emit","replace","toLowerCase","beforeDestroy","destroy","updated","trigger","watch","handler","nextProps","image","video","generateCanvasKey","$forceUpdate","once","updatePanoViewer","deep","immediate","render","canvasClass","DEFAULT_CANVAS_CLASS","h","ref","class","$slots","spinOptions","SPINVIEWER_OPTIONS","vanillaSpinViewer","VanillaSpinViewer","withSpinViewerMethods","spinViewer","SPINVIEWER_EVENTS","scale","newVal","setScale","wrapperClass","DEFAULT_WRAPPER_CLASS","imageClass","DEFAULT_IMAGE_CLASS","install","app","component","SpinViewer"],"mappings":"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"}